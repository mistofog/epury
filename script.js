function f() { // объявляем функцию
    //задаем константы
    let F = document.querySelector(".force"); // получаем введеное значение силы
    let Fp = F.value * 1.09; // преобразование силы в  расчетную силу, информация из методички
    let z = document.getElementById('sechZ').value // геометрическая характеристика сечения
    let y = document.getElementById('sechY').value // геометрическая характеристика сечения
    let E = 70000; // модуль упругости
    let L = 500; // длина консоли
    let M = []; // создание массива для значений момента в разных точках консоли
    let W = []; // создание массива для значений смещения точек консоли
    if(F.value>0 && F.value<=20 && z > 0 && y > 0)  { // проверка на допустимое значение силы: от 0 до 20
        let type = document.querySelector(".section"); // получаем значение блока "секция" где происходит выбор сечения
        // if (1) { // если значение секции "1" то производим расчеты для сечения 10х25
            let I = z * Math.pow( y, 3) / 12; // вычисляем значение момента инерции
            let sig = Fp * L * y / I; // считаем нормальное распределение напряжений
            let f = (Fp * Math.pow(L, 3)) / (3 * E * I); // считаем максимальное отклонение свободного конца балки
            let i = 0; // задаем нулевое значение для счетчика
            for (L; L >= 0; L -= 25) { // задаем цикл для расчета момента в разных точках балки для построения графика
                M[i] = Fp * L; // считаем изгибающий момент
                i++; // увеличиваем значение счетчика на 1
            }
            L = 500; // обновляем значение длинны консоли, так как уменьшали ее в цикле
            i = 0; // обнуляем значение счетчика для цикла
            for (let x = 500; x >= 0; x -= 25) { // задаем цикл для расчета смещения  разных точек консоли для построения графика
                W[i] = ((Fp * Math.pow(L, 3)) / (3 * E * I)) * (1 - ((3 * x) / (2 * L)) + ((Math.pow(x, 3)) / (2 * Math.pow(L, 3)))); // считаем и записываем в массив отклонения в консоли
                i++; // увеличиваем значение счетчика на 1
            }
            let inertia = document.querySelector('.inertia'); // находим на странице и выбираем элемент с  именем "инерция" для его дальнейшего изменения
            inertia.value = I+' мм^4'; // обновляем значение инерции добавляя строку - "приписку" со значением "мм"
            let sigma = document.querySelector(".sigma"); // находим на странице и выбираем элемент с  именем "сигма" для его дальнейшего изменения //
            sigma.value = sig+' МПа'; //обновляем значение напряжения добавляя строку - "приписку" со значением "МПа"
            let dislocation = document.querySelector(".dislocation"); // находим на странице и выбираем элемент с  именем "дислокация" для его дальнейшего изменения //
            dislocation.value = f+' мм'; //обновляем значение перемещения свободного конца консоли добавляя  строку - "приписку" со значением "мм"
            let moment_max = document.querySelector(".moment_max"); // находим на странице и выбираем элемент с  именем "момент максимальный" для его дальнейшего изменения //
            moment_max.value = M[0]+' Н·мм'; //обновляем значение максимального момента добавляя строку - "приписку" со значением "Н на мм"
            let moment_min = document.querySelector(".moment_min"); // находим на странице и выбираем элемент с  именем "момент минимальный" для его дальнейшего изменения //
            moment_min.value = M[20]+' Н·мм'; //обновляем значение минимального момента добавляя строку - "приписку" со значением "мм"
            let w_max = document.querySelector(".w_max"); // находим на странице и выбираем элемент с  именем "смещение максимальное" для его дальнейшего изменения //
            w_max.value = W[20]+' мм'; //обновляем значение максимального смещения добавляя строку - "приписку" со значением "мм"
            let w_min = document.querySelector(".w_min"); // находим на странице и выбираем элемент с  именем "смещение минимальное" для его дальнейшего изменения //
            w_min.value = W[0]+' мм'; // обновляем значение минимального смещения  добавляя строку - "приписку" со значением "мм"
            var img_1 = new Image(); //
            img_1.src = 'img/pattern.jpg'; //
            img_1.onload = function() { //
                var ctx_1 = document.getElementById('myChart_1').getContext('2d'); //
                var fillPattern_1 = ctx_1.createPattern(img_1, 'repeat'); //
                //эпюра нормальных напряжений
                var chart_1 = new Chart(ctx_1, { // Чтобы создать диаграмму, нам нужно создать экземпляр Chart класса и передать ему параметры, которые описаны ниже
                    type: 'line', // выбираем тип графика - линия
                    data: { // прописываем главные параметры графиков: координаты точек
                        labels: ['0','500'],
                        datasets: [{
                            label:'Эпюра нормального напряжени,МПа',
                            data: [sig, -sig],
                            backgroundColor: fillPattern_1, //
                            borderColor: 'rgb(59, 68, 255)', // указываем цвет рамки
                        }]
                    }
                });
            };
            //Эпюра изгибающих моментов
            var img_2 = new Image();
            img_2.src = 'img/pattern.jpg';
            img_2.onload = function() {
                var ctx_2 = document.getElementById('myChart_2').getContext('2d');
                var fillPattern_2 = ctx_2.createPattern(img_2, 'repeat');

                var chart_2 = new Chart(ctx_2, { // Чтобы создать диаграмму, нам нужно создать экземпляр Chart класса и передать ему параметры, которые описаны ниже
                    type: 'line', // выбираем тип графика - линия
                    data: { // прописываем главные параметры графиков: координаты точек
                        labels: ['0', '25', '50','75', '100', '125', '150', '175', '200', '225', '250', '275', '300', '325', '350','375', '400', '425', '450', '475', '500'],
                        datasets: [{
                            label:'Эпюра изгибающих моментов, Н·мм',
                            data: [-M[0], -M[1], -M[2], -M[3], -M[4], -M[5], -M[6], -M[7], -M[8], -M[9], -M[10], -M[11], -M[12], -M[13], -M[14], -M[15], -M[16], -M[17], -M[18], -M[19], -M[20]],
                            backgroundColor: fillPattern_2,
                            borderColor: 'rgb(59, 68, 255)',
                        }]
                    }
                });
            };
            //Изгиб балки
            var ctx_3 = document.getElementById('myChart_3').getContext('2d');
            var chart_3 = new Chart(ctx_3, { // Чтобы создать диаграмму, нам нужно создать экземпляр Chart класса и передать ему параметры, которые описаны ниже
                type: 'line', // выбираем тип графика - линия
                data: { // прописываем главные параметры графиков: координаты точек
                    labels: ['0', '25', '50','75', '100', '125', '150', '175', '200', '225', '250', '275', '300', '325', '350','375', '400', '425', '450', '475', '500'],
                    datasets: [{
                        label:'Изгиб балки, мм',
                        data: [-W[0], -W[1], -W[2], -W[3], -W[4], -W[5], -W[6], -W[7], -W[8], -W[9], -W[10], -W[11], -W[12], -W[13], -W[14], -W[15], -W[16], -W[17], -W[18], -W[19], -W[20]],
                        backgroundColor: 'white',
                        borderColor: 'rgb(59, 68, 255)',
                    }]
                }
            });

     /*   } else if (type.value == 2) { // иначе если значение секции "2" то производим расчеты для сечения 25х10
            let I = 2 * y * Math.pow(2 * z, 3) / 12; // вычисляем значение момента инерции
            let sig = Fp * L * z / I; // считаем нормальное распределение напряжений
            let f = (Fp * Math.pow(L, 3)) / (3 * E * I); // считаем максимальное отклонение свободного конца балки
            let i = 0; // задаем нулевое значение для счетчика
            for (L; L >= 0; L -= 25) { // задаем цикл для расчета момента в разных точках балки для построения графика
                M[i] = Fp * L; // считаем изгибающий момент в консоли
                i++; // увеличиваем значение счетчика на 1
            }
            L = 500; // обновляем значение длинны консоли, так как уменьшали ее в цикле
            i = 0; // обнуляем значение счетчика для цикла
            for (let x = 500; x >= 0; x -= 25) { // задаем цикл для расчета момента в разных точках консоли для построения графика
                W[i] = ((Fp * Math.pow(L, 3)) / (3 * E * I)) * (1 - ((3 * x) / (2 * L)) + ((Math.pow(x, 3)) / (2 * Math.pow(L, 3)))); // считаем и записываем в массив отклонения в консоли
                i++; // увеличиваем значение счетчика на 1
            }
            let inertia = document.querySelector('.inertia'); // находим на странице и выбираем элемент с  именем "инерция" для его дальнейшего изменения
            inertia.value = I+' мм^4'; // обновляем значение инерции добавляя строку - "приписку" со значением "мм"
            let sigma = document.querySelector(".sigma"); // находим на странице и выбираем элемент с  именем "сигма" для его дальнейшего изменения //
            sigma.value = sig+' МПа'; // обновляем значение напряжения добавляя строку - "приписку" со значением "МПа"
            let dislocation = document.querySelector(".dislocation"); // находим на странице и выбираем элемент с  именем "дислокация" для его дальнейшего изменения //
            dislocation.value = f+' мм'; // обновляем значение перемещения свободного конца консоли добавляя  строку - "приписку" со значением "мм"
            let moment_max = document.querySelector(".moment_max"); // находим на странице и выбираем элемент с  именем "момент максимальный" для его дальнейшего изменения //
            moment_max.value = M[0]+' Н·мм'; // обновляем значение максимального момента добавляя строку - "приписку" со значением "Н на мм"
            let moment_min = document.querySelector(".moment_min"); // находим на странице и выбираем элемент с  именем "момент минимальный" для его дальнейшего изменения //
            moment_min.value = M[20]+' Н·мм'; // обновляем значение минимального момента добавляя строку - "приписку" со значением "Н на мм"
            let w_max = document.querySelector(".w_max"); // находим на странице и выбираем элемент с  именем "смещение максимальное" для его дальнейшего изменения //
            w_max.value = W[20]+' мм'; // обновляем значение максимального смещения добавляя строку - "приписку" со значением "мм"
            let w_min = document.querySelector(".w_min"); // находим на странице и выбираем элемент с  именем "смещение минимальное" для его дальнейшего изменения //
            w_min.value = W[0]+' мм'; // обновляем значение минимального смещения  добавляя строку - "приписку" со значением "мм"
            var img_1 = new Image(); // создаем элемент пустого изображения
            img_1.src = 'img/pattern.jpg'; // загружаем в пустое изображение
            img_1.onload = function() {
                var ctx_1 = document.getElementById('myChart_1').getContext('2d');
                var fillPattern_1 = ctx_1.createPattern(img_1, 'repeat');
                //эпюра нормальных напряжений
                var chart_1 = new Chart(ctx_1, { // Чтобы создать диаграмму, нам нужно создать экземпляр Chart класса и передать ему параметры, которые описаны ниже
                    type: 'line',
                    data: { // прописываем главные параметры графиков: координаты точек
                        labels: ['0','500'],
                        datasets: [{
                            label:'Эпюра нормального напряжения,МПа',
                            data: [sig, -sig],
                            backgroundColor: fillPattern_1,
                            borderColor: 'rgb(155,159,242)',
                        }]
                    }
                });
            };
            //Эпюра изгибающих моментов
            var img_2 = new Image();
            img_2.src = 'img/pattern.jpg';
            img_2.onload = function() {
                var ctx_2 = document.getElementById('myChart_2').getContext('2d');
                var fillPattern_2 = ctx_2.createPattern(img_2, 'repeat');

                var chart_2 = new Chart(ctx_2, { // Чтобы создать диаграмму, нам нужно создать экземпляр Chart класса и передать ему параметры, которые описаны ниже
                    type: 'line', // выбираем тип графика - линия
                    data: { // прописываем главные параметры графиков: координаты точек
                        labels: ['0', '25', '50','75', '100', '125', '150', '175', '200', '225', '250', '275', '300', '325', '350','375', '400', '425', '450', '475', '500'],
                        datasets: [{
                            label:'Эпюра изгибающих моментов, Н·мм', // назначаем подпись к графику
                            data: [-M[0], -M[1], -M[2], -M[3], -M[4], -M[5], -M[6], -M[7], -M[8], -M[9], -M[10], -M[11], -M[12], -M[13], -M[14], -M[15], -M[16], -M[17], -M[18], -M[19], -M[20]],
                            backgroundColor: fillPattern_2, // выбираем цвет фона эпюры
                            borderColor: 'rgb(155, 159, 242)', // выбираем цвет линии
                        }]
                    }
                });
            };
            //Изгиб балки
            var ctx_3 = document.getElementById('myChart_3').getContext('2d');
            var chart_3 = new Chart(ctx_3, { // Чтобы создать диаграмму, нам нужно создать экземпляр Chart класса и передать ему параметры, которые описаны ниже
                type: 'line', // выбираем тип графика - линия
                data: { // прописываем главные параметры графиков: координаты точек
                    labels: ['0', '25', '50','75', '100', '125', '150', '175', '200', '225', '2520', '275', '300', '325', '350','375', '400', '425', '450', '475', '500'], // координата Х
                    datasets: [{
                        label:'Изгиб балки, мм', // назначаем подпись к графику
                        data: [-W[0], -W[1], -W[2], -W[3], -W[4], -W[5], -W[6], -W[7], -W[8], -W[9], -W[10], -W[11], -W[12], -W[13], -W[14], -W[15], -W[16], -W[17], -W[18], -W[19], -W[20]],
                        backgroundColor: 'white', // выбираем цвет фона эпюры
                        borderColor: 'rgb(155, 159, 242)', // выбираем цвет линии
                    }]
                },
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: 'Chart.js Time Point Data'
                    },
                    scales: {
                        xAxes: [{
                            type: 'time',
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Date'
                            },
                            ticks: {
                                major: {
                                    fontStyle: 'bold',
                                    fontColor: '#9b9ff2'
                                }
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'value'
                            }
                        }]
                    }
                }

            });
        } */
    }
    else { // выводим сообщение об ошибке в случае не правильно введенном значении силы
        alert('Что то пошло не так. Возможные причины ошибки:' + // значение ошибки
            '1) Вы ввели дробное значение силы через знак зяпятой, пожалуйста замените его на точку ' + // значение ошибки
            '2) Вы ввели значение <0 или >20Н 3) Вы ввели отрицательное значение сечения или не ввели его вовсе') // значение ошибки
    }

}
